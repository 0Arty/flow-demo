@media (min-width: 768px) {
  .swiper.only-mobile-slider {
    overflow: visible !important;
  }
  .swiper.only-mobile-slider .swiper-wrapper {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    width: auto !important;
  }
  .swiper.only-mobile-slider .swiper-slide {
    -webkit-box-flex: 1 !important;
    -ms-flex: 1 !important;
    flex: 1 !important;
    width: auto !important;
    min-width: 0;
  }
}
.swiper.only-mobile-slider .swiper-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: auto;
}
@media (width <= 47.99875rem) {
  .swiper.only-mobile-slider .swiper-slide {
    width: calc(100% - 1.25rem - 2.625rem);
  }
}

.swiper .custom-pagination {
  display: none;
}
@media (width <= 47.99875rem) {
  .swiper .custom-pagination {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 0.75rem 1.5rem;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin-inline: auto;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    background-color: rgba(12, 65, 62, 0.08);
    margin-top: 2rem;
    border-radius: 100px;
    gap: 0.5rem;
  }
}
.swiper .custom-pagination .swiper-pagination-bullet {
  margin: 0;
  width: 0.5625rem;
  height: 0.5625rem;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  opacity: 1;
  background-color: rgba(12, 65, 62, 0.24);
}
.swiper .custom-pagination .swiper-pagination-bullet-active {
  background: var(--green-900);
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN3aXBlci5zY3NzIiwic3dpcGVyLmNzcyIsImhlbHBlcnMvX21lZGlhLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBSUk7RUFESjtJQUdRLDRCQUFBO0VDSE47RURLTTtJQUNJLCtCQUFBO0lBQUEsK0JBQUE7SUFBQSx3QkFBQTtJQUNBLHNCQUFBO0VDSFY7RURNTTtJQUNJLDhCQUFBO0lBQUEsc0JBQUE7SUFBQSxrQkFBQTtJQUNBLHNCQUFBO0lBQ0EsWUFBQTtFQ0pWO0FBQ0Y7QURPSTtFQUNJLG9CQUFBO0VBQUEsb0JBQUE7RUFBQSxhQUFBO0VBQ0EsNEJBQUE7RUFBQSw2QkFBQTtFQUFBLDBCQUFBO0VBQUEsc0JBQUE7RUFDQSxZQUFBO0FDTFI7QUNvQkU7RUZsQkU7SUFNUSxzQ0FBQTtFQ0pWO0FBQ0Y7O0FEVUk7RUFDSSxhQUFBO0FDUFI7QUNXRTtFRkxFO0lBSVEsb0JBQUE7SUFBQSxvQkFBQTtJQUFBLGFBQUE7SUFDQSx1QkFBQTtJQUNBLHlCQUFBO0lBQUEsc0JBQUE7SUFBQSxtQkFBQTtJQUNBLHdCQUFBO0lBQUEscUJBQUE7SUFBQSx1QkFBQTtJQUNBLG1CQUFBO0lBQ0EsMEJBQUE7SUFBQSx1QkFBQTtJQUFBLGtCQUFBO0lBQ0Esd0NBQUE7SUFDQSxnQkFBQTtJQUNBLG9CQUFBO0lBQ0EsV0FBQTtFQ05WO0FBQ0Y7QURTUTtFQUNJLFNBQUE7RUFDQSxnQkFBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7RUFBQSxvQkFBQTtFQUFBLFlBQUE7RUFDQSxVQUFBO0VBQ0Esd0NBQUE7QUNQWjtBRFNZO0VBQ0ksNEJBQUE7QUNQaEIiLCJmaWxlIjoic3dpcGVyLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIkB1c2UgJy4vaGVscGVycycgYXMgKjtcclxuXHJcblxyXG4uc3dpcGVyLm9ubHktbW9iaWxlLXNsaWRlciB7XHJcbiAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAvLyDQl9Cw0LzRltC90ZbRgtGMINC90LAg0LLQsNGIIGJyZWFrcG9pbnQg0LTQu9GPINC00LXRgdC60YLQvtC/0YMsINGP0LrRidC+INGW0L3RiNC40LlcclxuICAgICAgICBvdmVyZmxvdzogdmlzaWJsZSAhaW1wb3J0YW50OyAvLyDQktC40LzQuNC60LDRlNC80L4g0YHQutGA0L7Quy/RgdC70LDQudC00ZbQvdCzXHJcblxyXG4gICAgICAgIC5zd2lwZXItd3JhcHBlciB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItc2xpZGUge1xyXG4gICAgICAgICAgICBmbGV4OiAxICFpbXBvcnRhbnQ7IC8vINCg0L7Qt9C/0L7QtNGW0LvRj9GU0LzQviDRgdC70LDQudC00Lgg0L/QvtGA0ZbQstC90YNcclxuICAgICAgICAgICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcclxuICAgICAgICAgICAgbWluLXdpZHRoOiAwOyAvLyDQlNC+0LfQstC+0LvRj9GU0LzQviDRgdGC0LjRgdC60LDQvdC90Y9cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLnN3aXBlci1zbGlkZSB7XHJcbiAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgIGhlaWdodDogYXV0bztcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgbW9iaWxlIHtcclxuICAgICAgICAgICAgd2lkdGg6IGNhbGMoMTAwJSAtIHJlbSgyMCkgLSByZW0oNDIpKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcblxyXG4uc3dpcGVyIHtcclxuICAgIC5jdXN0b20tcGFnaW5hdGlvbiB7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgICAgICAgQGluY2x1ZGUgbW9iaWxlIHtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgcGFkZGluZzogcmVtKDEyKSByZW0oMjQpO1xyXG4gICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgbWFyZ2luLWlubGluZTogYXV0bztcclxuICAgICAgICAgICAgd2lkdGg6IGZpdC1jb250ZW50O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyLCA2NSwgNjIsIDAuMDgpO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAycmVtO1xyXG4gICAgICAgICAgICBib3JkZXItcmFkaXVzOiAxMDBweDtcclxuICAgICAgICAgICAgZ2FwOiAwLjVyZW07XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldCB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgd2lkdGg6IHJlbSg5KTtcclxuICAgICAgICAgICAgaGVpZ2h0OiByZW0oOSk7XHJcbiAgICAgICAgICAgIGZsZXgtZ3JvdzogMDtcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxMiwgNjUsIDYyLCAwLjI0KTtcclxuXHJcbiAgICAgICAgICAgICYtYWN0aXZlIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6IHZhcigtLWdyZWVuLTkwMCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpIHtcbiAgLnN3aXBlci5vbmx5LW1vYmlsZS1zbGlkZXIge1xuICAgIG92ZXJmbG93OiB2aXNpYmxlICFpbXBvcnRhbnQ7XG4gIH1cbiAgLnN3aXBlci5vbmx5LW1vYmlsZS1zbGlkZXIgLnN3aXBlci13cmFwcGVyIHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgfVxuICAuc3dpcGVyLm9ubHktbW9iaWxlLXNsaWRlciAuc3dpcGVyLXNsaWRlIHtcbiAgICBmbGV4OiAxICFpbXBvcnRhbnQ7XG4gICAgd2lkdGg6IGF1dG8gIWltcG9ydGFudDtcbiAgICBtaW4td2lkdGg6IDA7XG4gIH1cbn1cbi5zd2lwZXIub25seS1tb2JpbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBoZWlnaHQ6IGF1dG87XG59XG5AbWVkaWEgKHdpZHRoIDw9IDQ3Ljk5ODc1cmVtKSB7XG4gIC5zd2lwZXIub25seS1tb2JpbGUtc2xpZGVyIC5zd2lwZXItc2xpZGUge1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxLjI1cmVtIC0gMi42MjVyZW0pO1xuICB9XG59XG5cbi5zd2lwZXIgLmN1c3RvbS1wYWdpbmF0aW9uIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cbkBtZWRpYSAod2lkdGggPD0gNDcuOTk4NzVyZW0pIHtcbiAgLnN3aXBlciAuY3VzdG9tLXBhZ2luYXRpb24ge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgcGFkZGluZzogMC43NXJlbSAxLjVyZW07XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtYXJnaW4taW5saW5lOiBhdXRvO1xuICAgIHdpZHRoOiBmaXQtY29udGVudDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDEyLCA2NSwgNjIsIDAuMDgpO1xuICAgIG1hcmdpbi10b3A6IDJyZW07XG4gICAgYm9yZGVyLXJhZGl1czogMTAwcHg7XG4gICAgZ2FwOiAwLjVyZW07XG4gIH1cbn1cbi5zd2lwZXIgLmN1c3RvbS1wYWdpbmF0aW9uIC5zd2lwZXItcGFnaW5hdGlvbi1idWxsZXQge1xuICBtYXJnaW46IDA7XG4gIHdpZHRoOiAwLjU2MjVyZW07XG4gIGhlaWdodDogMC41NjI1cmVtO1xuICBmbGV4LWdyb3c6IDA7XG4gIG9wYWNpdHk6IDE7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMTIsIDY1LCA2MiwgMC4yNCk7XG59XG4uc3dpcGVyIC5jdXN0b20tcGFnaW5hdGlvbiAuc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0LWFjdGl2ZSB7XG4gIGJhY2tncm91bmQ6IHZhcigtLWdyZWVuLTkwMCk7XG59IiwiQHVzZSAnLi9mdW5jdGlvbnMnIGFzICo7XHJcblxyXG4kbGFwdG9wOiAxNDQwLjk4O1xyXG4kdGFibGV0OiAxMDIzLjk4O1xyXG4kbW9iaWxlOiA3NjcuOTg7XHJcbiRtb2JpbGUtczogNDgwLjk4O1xyXG5cclxuQG1peGluIGxhcHRvcC1hYm92ZSB7XHJcbiAgQG1lZGlhICh3aWR0aCA+IHJlbSgkbGFwdG9wKSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gbGFwdG9wIHtcclxuICBAbWVkaWEgKHdpZHRoIDw9IHJlbSgkbGFwdG9wKSkge1xyXG4gICAgQGNvbnRlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG5AbWl4aW4gdGFibGV0LWFib3ZlIHtcclxuICBAbWVkaWEgKHdpZHRoID4gcmVtKCR0YWJsZXQpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiB0YWJsZXQge1xyXG4gIEBtZWRpYSAod2lkdGggPD0gcmVtKCR0YWJsZXQpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBtb2JpbGUtYWJvdmUge1xyXG4gIEBtZWRpYSAod2lkdGggPiByZW0oJG1vYmlsZSkpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1vYmlsZSB7XHJcbiAgQG1lZGlhICh3aWR0aCA8PSByZW0oJG1vYmlsZSkpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1vYmlsZS1zLWFib3ZlIHtcclxuICBAbWVkaWEgKHdpZHRoID4gcmVtKCRtb2JpbGUtcykpIHtcclxuICAgIEBjb250ZW50O1xyXG4gIH1cclxufVxyXG5cclxuQG1peGluIG1vYmlsZS1zIHtcclxuICBAbWVkaWEgKHdpZHRoIDw9IHJlbSgkbW9iaWxlLXMpKSB7XHJcbiAgICBAY29udGVudDtcclxuICB9XHJcbn1cclxuXHJcbkBtaXhpbiBob3ZlcigkaGFzQWN0aXZlRWZmZWN0T25Nb2JpbGU6IHRydWUpIHtcclxuICBAbWVkaWEgKGFueS1ob3ZlcjogaG92ZXIpIHtcclxuICAgICY6aG92ZXIge1xyXG4gICAgICBAY29udGVudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIEBpZiAoJGhhc0FjdGl2ZUVmZmVjdE9uTW9iaWxlKSB7XHJcbiAgICBAbWVkaWEgKGFueS1ob3Zlcjogbm9uZSkge1xyXG4gICAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgQGNvbnRlbnQ7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn0iXX0= */

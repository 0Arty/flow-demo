@charset "UTF-8";
*,
::before,
::after {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

:where(ul, ol):where([class]) {
  padding-left: 0;
}

:where(ul[class]) {
  list-style: none;
}

:where(address[class]) {
  font-style: normal;
}

:where(h1,
h2,
h3,
h4,
h5,
h6,
p,
ul,
ol,
dl):where([class]) {
  margin-block: 0;
}

html {
  height: 100dvh;
}

html,
:has(:target) {
  scroll-behavior: smooth;
}

@media screen and (max-width: 48rem) {
  html {
    scroll-behavior: auto;
  }
}

p {
  margin-block: 0;
}

img,
video {
  display: block;
  max-width: 100%;
  max-height: 100%;
  height: auto;
}

img {
  -o-object-fit: scale-down;
  object-fit: scale-down;
}

input,
textarea,
select,
button {
  font: inherit;
  border: none;
  outline: none;
  cursor: pointer;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
}

button,
label {
  cursor: pointer;
}

svg * {
  -webkit-transition-property: fill, stroke;
  transition-property: fill, stroke;
}

button {
  background-color: transparent;
  outline: none;
  border: none;
}

@media (prefers-reduced-motion: reduce) {
  *,
  ::before,
  ::after {
    -webkit-animation-duration: 0.01ms !important;
    animation-duration: 0.01ms !important;
    -webkit-animation-iteration-count: 1 !important;
    animation-iteration-count: 1 !important;
    -webkit-transition-duration: 0.01ms !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:root {
  --transition-duration: 0.4s;
  --base-color: var(--green-900);
  --base-font-family: var(--inter);
  --base-font-size: rem(16);
  --color-light: teal;
  --layer-top-header: 1000;
  --layer-top: 950;
  --peach: #F4BCB7;
  --yellow: #F2EAC0;
  --red: #FF4B4B;
  --green-900: #0C413E;
  --green-600: #4F716D;
  --green-300: #8AA1A0;
  --green-100: #C4CED0;
  --pastel-green-900: #C6CFC4;
  --pastel-green-600: #D5DBD3;
  --pastel-green-300: #E4E7E2;
  --pastel-green-100: #F1F3F0;
  --white: #FFFFFF;
  --yellow-green: #E2E8B7;
  --blue: #BFDDE6;
  --light-blue: #D9EBF0;
  --pastel-green-900-24: rgba(198, 207, 196, 0.24);
  --pastel-green-900-8: rgba(198, 207, 196, 0.08);
  --white-24: rgba(255, 255, 255, 0.24);
  --inter: "Inter", sans-serif;
  --archivo: "Archivo Black", sans-serif;
  --reddit: "Reddit Mono", monospace;
  --active: var(--peach);
  --terms-padding-top: 7.75rem;
  --terms-padding-bottom: 4.6875rem;
}
@media (width <= 47.99875rem) {
  :root {
    --terms-padding-top: 7rem;
    --terms-padding-bottom: 4.5625rem;
  }
}

h1 {
  font-family: var(--archivo);
  font-size: 3.5rem;
  font-style: normal;
  font-weight: 400;
  line-height: 3.5rem;
  letter-spacing: -0.14rem;
}
@media (width <= 47.99875rem) {
  h1 {
    font-size: 2.625rem;
    line-height: 2.875rem;
    letter-spacing: -0.105rem;
  }
}

h2 {
  font-family: var(--archivo);
  font-size: 2.625rem;
  font-style: normal;
  font-weight: 400;
  line-height: 2.875rem;
  letter-spacing: -0.105rem;
}
@media (width <= 47.99875rem) {
  h2 {
    /* MOBILE/H2 */
    font-size: 2rem;
    line-height: 2.25rem;
    letter-spacing: -0.08rem;
  }
}

h3 {
  font-family: var(--inter);
  font-size: 1.5625rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.875rem;
  letter-spacing: -0.04688rem;
}
@media (width <= 47.99875rem) {
  h3 {
    font-size: 1.375rem;
    line-height: 1.625rem;
    letter-spacing: -0.0275rem;
  }
}

.tl {
  /* Body L */
  font-family: var(--inter);
  font-size: 1.1875rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.5rem;
  letter-spacing: -0.02375rem;
}

.tmb {
  /* Body M – Bold */
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
}

.tm {
  /* Body M – Medium */
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
}

.tsb {
  /* Body S – Bold */
  font-family: var(--inter);
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1rem;
  letter-spacing: -0.0175rem;
}

.tsm {
  /* Body S – Medium */
  font-family: var(--inter);
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1rem;
  letter-spacing: -0.0175rem;
}

.note {
  font-family: "Reddit Mono";
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1rem;
  letter-spacing: 0.04875rem;
  text-transform: uppercase;
}

a,
button,
label,
input,
textarea,
select,
svg * {
  -webkit-transition-duration: var(--transition-duration);
  transition-duration: var(--transition-duration);
}

body {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100dvh;
  font-family: var(--base-font-family);
  color: var(--base-color);
}
body main {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}

a {
  color: inherit;
}
a[class] {
  text-decoration: none;
}

.header {
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  z-index: var(--layer-top-header);
}
.header__container {
  width: 100%;
  max-width: 100rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(100rem + 2.5rem + 2.5rem)) {
  .header__container {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .header__container {
    width: calc(100% - 1.25rem * 2);
  }
}
.header__container {
  padding: 1rem 1.5rem;
  background-color: var(--green-900);
  display: grid;
  grid-template-columns: 1fr 8.25rem 1fr;
  gap: 1rem;
  border-radius: 0 0 0.5rem 0.5rem;
}
@media (width <= 47.99875rem) {
  .header__container {
    padding: 1rem 1.25rem;
    width: 100%;
    max-width: unset;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
  }
}
.header__container .location {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.5rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  --color: var(--white);
}
@media (width <= 47.99875rem) {
  .header__container .location {
    display: none;
  }
}
@media (hover: hover) {
  .header__container .location:hover {
    cursor: pointer;
    --color: var(--yellow-green) ;
  }
}
.header__container .location:focus-visible {
  --color: var(--yellow-green) ;
}
.header__container .location svg {
  width: 1.25rem;
  height: 1.25rem;
  aspect-ratio: 1/1;
  color: var(--color);
  -webkit-transition: 0.4s ease-out all;
  transition: 0.4s ease-out all;
}
.header__container .location svg [fill] {
  fill: currentColor;
}
.header__container .location p {
  color: var(--color);
  text-align: left;
  -webkit-transition: 0.4s ease-out all;
  transition: 0.4s ease-out all;
  /* Body S – Medium */
  font-family: var(--inter);
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1rem;
  /* 114.286% */
  letter-spacing: -0.0175rem;
}
.header__container .location .text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.header__container .logo__container {
  color: var(--white);
}
@media (hover: hover) {
  .header__container .logo__container:hover {
    cursor: pointer;
    color: var(--yellow-green);
  }
}
.header__container .logo__container:focus-visible {
  color: var(--yellow-green);
}
.header__container .logo__container svg {
  color: inherit;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.header__container .logo__container svg [fill] {
  fill: currentColor;
}
.header__container .links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1.5rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: end;
}
.header__container .links .mobile {
  color: var(--white, #FFF);
  text-align: center;
  /* Body S – Bold */
  font-family: Inter;
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1rem;
  /* 114.286% */
  letter-spacing: -0.0175rem;
}
@media (hover: hover) {
  .header__container .links .mobile:hover {
    cursor: pointer;
    color: var(--yellow-green);
  }
}
.header__container .links .mobile:focus-visible {
  color: var(--yellow-green);
}
@media screen and (max-width: 55rem) {
  .header__container .links .mobile {
    display: none;
  }
}

.footer {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 6.25rem;
}
.footer__container {
  background: var(--Green-900, #0C413E);
  width: 100%;
  max-width: 105rem;
  margin-inline: auto;
  padding-top: 4rem;
  border-radius: 0.5rem 0.5rem 0 0;
}
@media screen and (max-width: 105rem) {
  .footer__container {
    border-radius: 0;
  }
}
@media (width <= 47.99875rem) {
  .footer__container {
    padding-top: 3.25rem;
  }
}
.footer__grid {
  width: 100%;
  padding-inline: 2.5rem;
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 0.75rem;
}
@media (width <= 63.99875rem) {
  .footer__grid {
    grid-template-columns: 1fr 1fr;
    padding-inline: 2rem;
  }
}
@media (width <= 47.99875rem) {
  .footer__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 2rem;
  }
}
.footer__grid .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.footer__grid .col__logo {
  grid-column: 1/span 2;
}
@media (width <= 63.99875rem) {
  .footer__grid .col__logo {
    grid-column: auto;
  }
}
.footer__grid .col__logo .link-to-main-site {
  color: var(--white);
}
@media (hover: hover) {
  .footer__grid .col__logo .link-to-main-site:hover {
    cursor: pointer;
    color: var(--yellow-green);
  }
}
.footer__grid .col__logo .link-to-main-site:focus-visible {
  color: var(--yellow-green);
}
@media (width <= 63.99875rem) {
  .footer__grid .col__logo .link-to-main-site {
    max-width: 10.1875rem;
  }
}
.footer__grid .col__logo .link-to-main-site svg {
  color: inherit;
  width: 100%;
  height: auto;
}
.footer__grid .col__logo .link-to-main-site svg [fill] {
  fill: currentColor;
}
.footer__grid .col__text {
  grid-column: 7/span 5;
  padding-top: 2.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media (width <= 63.99875rem) {
  .footer__grid .col__text {
    grid-column: auto;
  }
}
@media (width <= 47.99875rem) {
  .footer__grid .col__text {
    padding-top: 0;
  }
}
.footer__grid .col__text .text__grid {
  display: grid;
  grid-template-columns: repeat(5, 1fr);
  gap: 1.5rem 0.75rem;
}
@media screen and (max-width: 76.25rem) {
  .footer__grid .col__text .text__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
@media (width <= 47.99875rem) {
  .footer__grid .col__text .text__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.footer__grid .col__text .text__grid h2 {
  color: var(--white);
  grid-column: 1/span 4;
}
.footer__grid .col__text .text__grid p {
  color: var(--white);
  grid-column: 1/span 3;
}
.footer__grid .col__text .footer-btn {
  background-color: var(--white);
  padding: 1.25rem 2rem;
  margin-top: 2.5rem;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
}
@media (hover: hover) {
  .footer__grid .col__text .footer-btn:hover {
    cursor: pointer;
    background-color: var(--yellow-green);
  }
}
.footer__grid .col__text .footer-btn:focus-visible {
  background-color: var(--yellow-green);
}
@media (width <= 47.99875rem) {
  .footer__grid .col__text .footer-btn {
    margin-top: 2rem;
    width: 100%;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
}
.footer__grid .col__text .footer-btn .text__container .flex__container .text {
  color: var(--green-900);
}
.footer__grid .col__text .footer-btn .icon svg {
  color: var(--green-900);
}
.footer__grid .col__text .footer-btn .icon svg [fill] {
  fill: currentColor;
}
.footer__grid .col__text .footer-btn .icon svg [stroke] {
  stroke: currentColor;
}
.footer__grid .col__text .soccials {
  margin-top: 4rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
}
@media (width <= 47.99875rem) {
  .footer__grid .col__text .soccials {
    margin-top: 3.25rem;
  }
}
.footer__grid .col__text .soccials a {
  width: 3.75rem;
  height: 3.75rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  border-radius: 99rem;
  border: 1px solid var(--white-24, rgba(255, 255, 255, 0.24));
}
@media (hover: hover) {
  .footer__grid .col__text .soccials a:hover {
    cursor: pointer;
    background-color: var(--yellow-green);
  }
}
.footer__grid .col__text .soccials a:focus-visible {
  background-color: var(--yellow-green);
}
.footer__terms {
  margin-top: 4rem;
  width: 100%;
  border-top: 1px solid #4F716D;
  padding: 1.5rem 2.5rem;
}
@media (width <= 63.99875rem) {
  .footer__terms {
    padding: 1.5rem 2rem;
  }
}
.footer__terms__grid {
  display: grid;
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 0.75rem;
}
@media (width <= 63.99875rem) {
  .footer__terms__grid {
    grid-template-columns: 1fr 1fr;
  }
}
@media (width <= 47.99875rem) {
  .footer__terms__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1rem;
  }
}
.footer__terms__grid .col .tsm {
  color: var(--green-300);
}
.footer__terms__grid .col.reserved {
  grid-column: 1/span 6;
}
@media (width <= 63.99875rem) {
  .footer__terms__grid .col.reserved {
    grid-column: auto;
  }
}
.footer__terms__grid .col.links {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  gap: 1rem 1.5rem;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
  grid-column: 7/span 5;
}
@media (width <= 63.99875rem) {
  .footer__terms__grid .col.links {
    grid-column: auto;
  }
}
@media (width <= 47.99875rem) {
  .footer__terms__grid .col.links {
    gap: 0.75rem;
    -webkit-box-ordinal-group: 0;
    -ms-flex-order: -1;
    order: -1;
  }
}
.footer__terms__grid .col.links .link {
  color: var(--Green-300, #8AA1A0);
  text-align: center;
  /* Body S – Medium */
  font-family: Inter;
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1rem;
  /* 114.286% */
  letter-spacing: -0.0175rem;
  text-decoration-line: underline;
  text-decoration-style: solid;
  -webkit-text-decoration-skip: ink;
  text-decoration-skip-ink: auto;
  text-decoration-thickness: 8%;
  /* 1.12px */
  text-underline-offset: 22%;
  /* 3.08px */
  text-underline-position: from-font;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
@media (hover: hover) {
  .footer__terms__grid .col.links .link:hover {
    cursor: pointer;
    color: var(--yellow-green);
  }
}
.footer__terms__grid .col.links .link:focus-visible {
  color: var(--yellow-green);
}

.advantages__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}
@media (width <= 47.99875rem) {
  .advantages__item {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    gap: 1rem;
  }
}
.advantages__item .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.advantages__item .icon svg {
  height: 1.25rem;
  width: 1.25rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.marquee__item {
  border-radius: 0.5rem;
  background: #f8f8f8;
  width: calc((100vw - 2.5rem * 2 - 2.25rem) / 4);
  aspect-ratio: 391/450;
  height: auto;
  position: relative;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
@media (width <= 63.99875rem) {
  .marquee__item {
    width: calc((100vw - 2.5rem * 2 - 1.5rem) / 3);
  }
}
@media (width <= 47.99875rem) {
  .marquee__item {
    aspect-ratio: 1/1;
    min-width: unset;
    max-width: 21.25rem;
    height: calc(100vw - 1.25rem - 2.625rem);
    width: calc(100vw - 1.25rem - 2.625rem);
  }
}
.marquee__item video {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  pointer-events: none;
}
.marquee__item img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  pointer-events: none;
}
.marquee__item:empty {
  display: none;
}
.marquee__item h3 {
  color: var(--pastel-green-100);
  position: absolute;
  left: 2.5rem;
  bottom: 2.5rem;
}
@media (width <= 63.99875rem) {
  .marquee__item h3 {
    left: 1rem;
    bottom: 1rem;
  }
}
@media (width <= 47.99875rem) {
  .marquee__item h3 {
    left: 2rem;
    bottom: 2rem;
  }
}

.accrodion__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
  width: 100%;
}
.accrodion__item .progress_bar {
  height: 1px;
  width: 100%;
  position: relative;
  background-color: rgba(12, 65, 62, 0.08);
}
.accrodion__item .progress_bar:after {
  content: "";
  position: absolute;
  width: var(--width);
  background-color: rgba(12, 65, 62, 0.24);
  height: 100%;
  left: 0;
  -webkit-transition: 0.3s ease-out all;
  transition: 0.3s ease-out all;
}
.accrodion__item__header {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media (hover: hover) {
  .accrodion__item__header:hover {
    cursor: pointer;
  }
  .accrodion__item__header:hover h3 {
    -webkit-transform: translateY(-4px);
    -ms-transform: translateY(-4px);
    transform: translateY(-4px);
  }
  .accrodion__item__header:hover .toggler {
    scale: 1.25;
  }
}
.accrodion__item__header:focus-visible h3 {
  -webkit-transform: translateY(-4px);
  -ms-transform: translateY(-4px);
  transform: translateY(-4px);
}
.accrodion__item__header:focus-visible .toggler {
  scale: 1.25;
}
.accrodion__item__header .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 1rem;
  border-radius: 0.5rem;
  border: 1px solid rgba(12, 65, 62, 0.24);
}
@media (width <= 47.99875rem) {
  .accrodion__item__header .icon {
    padding: 0.625rem;
  }
}
.accrodion__item__header .icon svg {
  width: 2rem;
  height: 2rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.accrodion__item__header h3 {
  color: var(--green-900);
  text-align: left;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.accrodion__item__header .toggler {
  width: 1.5rem;
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  margin-left: auto;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.accrodion__item__header .toggler svg {
  position: absolute;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  -webkit-transform-origin: center;
  -ms-transform-origin: center;
  transform-origin: center;
}
.accrodion__item__header .toggler svg:last-child {
  opacity: 0;
  scale: 0;
}
.accrodion__item__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.accrodion__item__container .dropdown {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding-left: 5rem;
  padding-top: 0.5rem;
}
@media (width <= 47.99875rem) {
  .accrodion__item__container .dropdown {
    padding-top: 1rem;
    padding-left: 0;
  }
}
.accrodion__item.active .toggler svg:first-child {
  opacity: 0;
  scale: 0;
}
.accrodion__item.active .toggler svg:last-child {
  scale: 1;
  opacity: 1;
}

.benefit-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  min-height: 24.4375rem;
  padding: 2.5rem;
  border-radius: 0.5rem;
}
@media screen and (max-width: 83.75rem) {
  .benefit-slide {
    padding: 2rem;
  }
}
@media screen and (max-width: 72.5rem) {
  .benefit-slide {
    min-height: 21.25rem;
  }
}
@media (width <= 47.99875rem) {
  .benefit-slide {
    min-height: 26.875rem;
  }
}
.benefit-slide .icon {
  width: 2rem;
  height: 2rem;
}
.benefit-slide .icon svg {
  width: 100%;
  height: auto;
}
.benefit-slide h3 {
  width: calc(100% - 2.375rem);
  margin-top: 1.5rem;
  margin-bottom: 1.5rem;
}
@media screen and (max-width: 83.75rem) {
  .benefit-slide h3 {
    width: 100%;
  }
}
.benefit-slide__line {
  width: 100%;
  margin-top: auto;
  height: 1px;
  background-color: rgba(12, 65, 62, 0.08);
}
.benefit-slide p {
  margin-top: 2.5rem;
  width: calc(100% - 1.1875rem);
}
@media (width <= 47.99875rem) {
  .benefit-slide p {
    width: 100%;
    margin-top: 2rem;
  }
}

.hero {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.hero__container {
  width: 100%;
  max-width: 100rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(100rem + 2.5rem + 2.5rem)) {
  .hero__container {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .hero__container {
    width: calc(100% - 1.25rem * 2);
  }
}
.hero__container {
  margin-top: 15.38rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  z-index: 2;
}
@media (width <= 47.99875rem) {
  .hero__container {
    margin-top: 10.12rem;
  }
}
.hero__container h1 {
  text-align: center;
}
.hero__container p {
  max-width: 37.5rem;
  text-align: center;
  margin-top: 1.5rem;
}
.hero__container .hero-btn {
  margin-top: 2.5rem;
}
@media (width <= 47.99875rem) {
  .hero__container .hero-btn {
    margin-top: 2rem;
  }
}
.hero .svg {
  position: absolute;
}
@media (width <= 47.99875rem) {
  .hero .svg.desktop {
    display: none;
  }
}
.hero .svg.mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .hero .svg.mobile {
    display: block;
  }
}
.hero .svg.left {
  top: 0;
  left: 0;
}
@media (width <= 47.99875rem) {
  .hero .svg.left {
    top: -3.125rem;
  }
}

.advantages {
  margin-top: 7.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
@media (width <= 47.99875rem) {
  .advantages {
    margin-top: 5rem;
  }
}
.advantages__grid {
  width: 100%;
  max-width: 80.13rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(80.13rem + 2.5rem + 2.5rem)) {
  .advantages__grid {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .advantages__grid {
    width: calc(100% - 1.25rem * 2);
  }
}
.advantages__grid {
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  gap: 0.75rem;
}
@media (width <= 47.99875rem) {
  .advantages__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.advantages .svg {
  position: absolute;
  right: 0;
  top: -110px;
  z-index: -1;
}
@media (width <= 47.99875rem) {
  .advantages .svg {
    display: none;
  }
}

.marquee__container {
  width: 100%;
  overflow: hidden;
  margin-top: 4rem;
}
@media (width <= 47.99875rem) {
  .marquee__container {
    margin-top: 2rem;
  }
}

.marquee {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  gap: 12px;
}
.marquee .js-marquee {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  gap: 12px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}
.marquee .js-marquee-wrapper {
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
}

.how-to-order {
  margin-top: 6.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.how-to-order__title {
  width: 100%;
  max-width: 63.37rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1.5rem;
}
@media screen and (max-width: calc(63.37rem + 2.5rem + 2.5rem)) {
  .how-to-order__title {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .how-to-order__title {
    width: calc(100% - 1.25rem * 2);
  }
}
.how-to-order__title .note {
  color: var(--green-300);
}
.how-to-order__title h2 {
  color: var(--green-900);
  text-align: center;
}
.how-to-order .cards__container {
  width: 100%;
  max-width: 81.56rem;
  margin-inline: auto;
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
  margin-top: 2.5rem;
}
@media screen and (max-width: calc(81.56rem + 2.5rem + 2.5rem)) {
  .how-to-order .cards__container {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .how-to-order .cards__container {
    width: calc(100% - 1.25rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .how-to-order .cards__container {
    grid-template-columns: 1fr;
    grid-template-rows: 1fr 1fr;
    gap: 2rem;
    margin-top: 2rem;
  }
}
.how-to-order .cards__container .card {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  border-radius: 0.5rem;
  background-color: var(--white);
  overflow: hidden;
}
@media (hover: hover) {
  .how-to-order .cards__container .card:hover {
    cursor: pointer;
  }
  .how-to-order .cards__container .card:hover .image__container img {
    scale: 1.1;
  }
}
.how-to-order .cards__container .card:focus-visible .image__container img {
  scale: 1.1;
}
.how-to-order .cards__container .card .image__container {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: end;
  padding: 2.5rem;
  min-height: 25rem;
  gap: 1.5rem;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  overflow: hidden;
}
@media screen and (max-width: 64rem) {
  .how-to-order .cards__container .card .image__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: start;
    -webkit-box-pack: end;
    -ms-flex-pack: end;
    justify-content: end;
    padding: 2rem;
  }
}
.how-to-order .cards__container .card .image__container img {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  -o-object-fit: cover;
  object-fit: cover;
  -webkit-transition: 0.7s ease-out scale;
  transition: 0.7s ease-out scale;
}
.how-to-order .cards__container .card .image__container .toner {
  position: absolute;
  height: 17.125rem;
  bottom: 0;
  left: 0;
  width: 100%;
  z-index: 1;
  background: -webkit-gradient(linear, left bottom, left top, from(rgba(0, 0, 0, 0.64)), to(rgba(0, 0, 0, 0)));
  background: linear-gradient(0deg, rgba(0, 0, 0, 0.64) 0%, rgba(0, 0, 0, 0) 100%);
}
@media screen and (max-width: 25.125rem) {
  .how-to-order .cards__container .card .image__container .toner {
    height: 20rem;
  }
}
.how-to-order .cards__container .card .image__container h3 {
  position: relative;
  z-index: 2;
  color: var(--white);
  max-width: 16.9375rem;
}
.how-to-order .cards__container .card .image__container .link {
  position: relative;
  z-index: 2;
  padding: 0.75rem 1.5rem;
  border-radius: 100px;
  border: 1px solid var(--white);
  color: var(--white);
  text-wrap: nowrap;
}
.how-to-order .cards__container .card .text__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  padding: 1.5rem 2.5rem 2.5rem;
}
@media screen and (max-width: 64rem) {
  .how-to-order .cards__container .card .text__container {
    padding: 1.5rem 2rem 2rem;
  }
}

.garanties {
  margin-top: 4.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 2.5rem;
  position: relative;
}
@media (width <= 47.99875rem) {
  .garanties {
    margin-top: 3.25rem;
    gap: 2rem;
  }
}
.garanties__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  position: relative;
  z-index: 2;
}
.garanties__title h3 {
  text-align: center;
  color: var(--green-900);
}
.garanties__slider {
  width: 100%;
  max-width: 45rem;
  margin-inline: auto;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
  margin-inline: auto;
  position: relative;
  z-index: 2;
}
@media screen and (max-width: calc(45rem + 2.5rem + 2.5rem)) {
  .garanties__slider {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .garanties__slider {
    width: calc(100% - 1.25rem * 2);
  }
}
@media (min-width: 768px) {
  .garanties__slider .swiper-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 0.75rem;
  }
}
@media (width <= 63.99875rem) {
  .garanties__slider {
    width: 100%;
    max-width: 64rem;
    margin-inline: auto;
  }
}
@media screen and (width <= 63.99875rem) and (max-width: calc(64rem + 2.5rem + 2.5rem)) {
  .garanties__slider {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) and (width <= 63.99875rem) {
  .garanties__slider {
    width: calc(100% - 1.25rem * 2);
  }
}
@media (width <= 47.99875rem) {
  .garanties__slider {
    max-width: unset;
    width: 100%;
  }
}
.garanties__slider .swiper-slide .content {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 1.5rem;
  padding: 1.5rem;
  border-radius: 0.5rem;
  background-color: var(--white);
}
@media (width <= 47.99875rem) {
  .garanties__slider .swiper-slide .content {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
.garanties__slider .swiper-slide .content img {
  width: 6.25rem;
  height: 6.25rem;
  border-radius: 0.5rem;
  -o-object-fit: cover;
  object-fit: cover;
}
@media (width <= 47.99875rem) {
  .garanties__slider .swiper-slide .content img {
    width: 5rem;
    height: 5rem;
  }
}
.garanties__slider .swiper-slide .content .text {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
.garanties .svg {
  position: absolute;
  z-index: -1;
}
@media (width <= 47.99875rem) {
  .garanties .svg {
    display: none;
  }
}
.garanties .svg.left {
  top: 14px;
  left: 0;
}
.garanties .svg.right {
  right: 0;
  top: -186px;
}

.line {
  max-width: 105rem;
  width: 100%;
  margin-inline: auto;
  background: var(--green-9008, rgba(12, 65, 62, 0.08));
  height: 1px;
  margin-top: 6.25rem;
}
@media (width <= 47.99875rem) {
  .line {
    display: none;
  }
}

.opportunities {
  margin-top: 6.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
@media (width <= 47.99875rem) {
  .opportunities {
    margin-top: 5rem;
  }
}
.opportunities__title {
  width: 100%;
  max-width: 63.375rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(63.375rem + 2.5rem + 2.5rem)) {
  .opportunities__title {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .opportunities__title {
    width: calc(100% - 1.25rem * 2);
  }
}
.opportunities__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1.5rem;
}
.opportunities__title .note {
  color: var(--green-300);
  text-align: center;
}
.opportunities__title h2 {
  color: var(--green-900);
  text-align: center;
}
.opportunities__slider {
  width: 100%;
  max-width: 81.5625rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(81.5625rem + 2.5rem + 2.5rem)) {
  .opportunities__slider {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .opportunities__slider {
    width: calc(100% - 1.25rem * 2);
  }
}
.opportunities__slider {
  margin-top: 2.5rem;
}
@media (width <= 47.99875rem) {
  .opportunities__slider {
    margin-top: 2rem;
  }
}
@media (min-width: 768px) {
  .opportunities__slider .swiper-wrapper {
    display: grid;
    grid-template-columns: 1fr 1fr 1fr;
    grid-template-rows: 1fr;
    gap: 0.75rem;
  }
}
@media (width <= 47.99875rem) {
  .opportunities__slider {
    max-width: unset;
    width: 100%;
  }
}
.opportunities__slider .swiper-wrapper .swiper-slide:nth-child(1) .content {
  background-color: var(--pastel-green-300);
}
.opportunities__slider .swiper-wrapper .swiper-slide:nth-child(2) .content {
  background-color: var(--green-100);
}
.opportunities__slider .swiper-wrapper .swiper-slide:nth-child(3) .content {
  background: var(--yellow-green);
}
.opportunities__slider .content {
  position: relative;
  padding: 12.5rem 1rem 5rem 2.5rem;
  border-radius: 0.5rem;
  min-height: 46.25rem;
  overflow: hidden;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  gap: 5rem;
}
@media screen and (max-width: 76.25rem) {
  .opportunities__slider .content {
    padding-inline: 1rem;
    padding-top: 5rem;
    min-height: 40.75rem;
  }
}
@media (width <= 47.99875rem) {
  .opportunities__slider .content {
    padding: 5rem 2rem 3.75rem;
  }
}
.opportunities__slider .content .countries {
  position: absolute;
  left: 2.5rem;
  top: 2.5rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  z-index: 2;
}
@media screen and (max-width: 76.25rem) {
  .opportunities__slider .content .countries {
    left: 1rem;
    top: 1rem;
  }
}
@media (width <= 47.99875rem) {
  .opportunities__slider .content .countries {
    left: 2rem;
    top: 2.5rem;
  }
}
.opportunities__slider .content .countries img {
  width: 1.5rem;
  height: 1.5rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.opportunities__slider .content .countries img:nth-child(2) {
  margin-left: -0.5rem;
}
.opportunities__slider .content .countries img:nth-child(3) {
  margin-left: -0.5rem;
}
.opportunities__slider .content svg {
  position: absolute;
  top: 2.5rem;
  margin-inline: auto;
  max-width: calc(100% - 2.25rem - 2.25rem);
  left: 50%;
  -webkit-transform: translateX(-50%);
  -ms-transform: translateX(-50%);
  transform: translateX(-50%);
}
.opportunities__slider .content h3 {
  position: relative;
  z-index: 2;
}
.opportunities__slider .content .list {
  margin-top: auto;
  position: relative;
  z-index: 2;
}
.opportunities__slider .content .list ul {
  list-style-type: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
.opportunities__slider .content .list ul li {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
}
.opportunities__slider .content .list ul li::before {
  content: url("../assets/icons/point.svg");
  width: 1.25rem;
  height: 1.25rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
}

.platform {
  width: 100%;
  max-width: 100rem;
  margin-inline: auto;
  position: relative;
  overflow: hidden;
}
@media screen and (max-width: calc(100rem + 2.5rem + 2.5rem)) {
  .platform {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .platform {
    width: calc(100% - 1.25rem * 2);
  }
}
.platform {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 6.25rem;
  border-radius: 0.5rem;
  background: var(--bue, #BFDDE6);
  padding-bottom: 4rem;
}
@media (width <= 47.99875rem) {
  .platform {
    padding-bottom: 3.25rem;
  }
}
@media (width <= 47.99875rem) {
  .platform {
    margin-top: 5rem;
  }
}
.platform__title {
  display: grid;
  grid-template-columns: repeat(11, 1fr);
  gap: 1.5rem 0.75rem;
  margin-top: 4rem;
  padding-inline: 2rem;
  position: relative;
  z-index: 3;
}
@media (width <= 47.99875rem) {
  .platform__title {
    margin-top: 3.25rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.platform__title .note,
.platform__title h2 {
  grid-column: 3/10;
  text-align: center;
}
.platform__grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 0.75rem;
  position: relative;
  z-index: 3;
}
@media (width <= 47.99875rem) {
  .platform__grid {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 2rem;
  }
}
.platform__grid.accord {
  margin-top: 2.5rem;
}
@media (width <= 47.99875rem) {
  .platform__grid.accord {
    margin-top: 2rem;
  }
}
.platform__grid.accord .text {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0.75rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.accord .text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    padding-left: 2rem;
    padding-right: 0.75rem;
  }
}
@media screen and (max-width: 76.25rem) and (width <= 47.99875rem) {
  .platform__grid.accord .text {
    padding-inline: 2rem;
  }
}
.platform__grid.accord .text__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 2/span 4;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  gap: 1.5rem;
  padding-left: 0.8125rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.accord .text__container {
    padding-left: 0;
  }
}
.platform__grid.accord .text__container .mobile.line {
  width: 100%;
  display: none;
}
@media (width <= 47.99875rem) {
  .platform__grid.accord .text__container .mobile.line {
    margin-top: 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    height: 1px;
    background-color: rgba(12, 65, 62, 0.08);
  }
}
.platform__grid.accord .image__container {
  height: 46.875rem;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.accord .image__container {
    height: 36.25rem;
  }
}
@media (width <= 47.99875rem) {
  .platform__grid.accord .image__container {
    height: auto;
    aspect-ratio: 1/1;
    width: calc(100% - 2rem - 2rem);
    margin-inline: 2rem;
  }
}
.platform__grid.accord .image__container img {
  width: calc(100% - 2.5rem);
  height: 100%;
  position: absolute;
  -o-object-fit: cover;
  object-fit: cover;
  left: 0;
  top: 0;
  border-radius: 0.5rem;
}
@media (width <= 47.99875rem) {
  .platform__grid.accord .image__container img {
    width: 100%;
  }
}
.platform__grid.steps {
  margin-top: 4.0625rem;
}
@media (width <= 47.99875rem) {
  .platform__grid.steps {
    margin-top: 3.25rem;
  }
}
.platform__grid.steps > .text {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0.75rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.steps > .text {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    padding-left: 2rem;
    padding-right: 0.75rem;
    -webkit-box-pack: start;
    -ms-flex-pack: start;
    justify-content: start;
  }
}
@media screen and (max-width: 76.25rem) and (width <= 47.99875rem) {
  .platform__grid.steps > .text {
    padding-inline: 2rem;
  }
}
.platform__grid.steps > .text .text__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 2/span 5;
  -webkit-box-pack: start;
  -ms-flex-pack: start;
  justify-content: start;
  gap: 1.5rem;
  padding-left: 0.8125rem;
  padding-right: 3.75rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.steps > .text .text__container {
    padding-left: 0;
    padding-right: 0;
  }
}
.platform__grid.steps .list__container {
  display: grid;
  grid-template-columns: repeat(6, 1fr);
  gap: 0.75rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.steps .list__container {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 0;
  }
}
@media (width <= 47.99875rem) {
  .platform__grid.steps .list__container {
    padding-inline: 2rem;
  }
}
.platform__grid.steps .col {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  grid-column: 1/span 5;
  padding-right: 0.875rem;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.steps .col {
    padding-right: 2.5rem;
  }
}
@media (width <= 47.99875rem) {
  .platform__grid.steps .col {
    padding-right: 0;
  }
}
.platform__grid.steps .list {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.75rem;
}
.platform__grid.steps .list__item {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 1rem;
  border-radius: 0.5rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 1rem;
  border: 1px solid var(--green-90024, rgba(12, 65, 62, 0.24));
}
.platform__grid.steps .list__item .step {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 2.5rem;
  height: 2.5rem;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  color: var(--Green-900, #0C413E);
  /* Body M – Bold */
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.25rem;
  /* 125% */
  letter-spacing: -0.025rem;
}
.platform__grid.steps .btn {
  margin-top: 2.25rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 2rem;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}
@media screen and (max-width: 76.25rem) {
  .platform__grid.steps .btn {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
  }
}
@media (width <= 47.99875rem) {
  .platform__grid.steps .btn .steps-btn {
    width: 100%;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
}
.platform__grid.steps .btn .steps-btn .text {
  text-wrap: nowrap;
}
.platform__grid.steps .btn .steps-btn .icon {
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
.platform .svg {
  position: absolute;
}
.platform .svg.right {
  right: 0;
  top: 0;
}
.platform .svg.bottom {
  bottom: 0;
  left: 0;
}
@media (width <= 47.99875rem) {
  .platform .svg.desktop {
    display: none;
  }
}
.platform .svg.mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .platform .svg.mobile {
    display: block;
  }
}

.about {
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 12.5rem;
}
.about__container {
  width: 100%;
  max-width: 81.625rem;
  margin-inline: auto;
  position: relative;
}
@media screen and (max-width: calc(81.625rem + 2.5rem + 2.5rem)) {
  .about__container {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .about__container {
    width: calc(100% - 1.25rem * 2);
  }
}
.about__container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1.5rem;
}
.about__container .note {
  color: var(--green-300);
  text-align: center;
}
.about__container h2 {
  text-align: center;
}
.about__container .absolute--block {
  position: absolute;
  width: 8.75rem;
  height: 10rem;
  border-radius: 0.5rem;
  overflow: hidden;
  background: red;
}
.about__container .absolute--block img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  inset: 0;
}
.about__container .absolute--block.block-1 {
  top: -9.375rem;
  left: 16.462%;
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-1 {
    top: 10.0625rem;
    left: 0;
  }
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-1 {
    width: 6.25rem;
    height: 7.5rem;
  }
}
.about__container .absolute--block.block-2 {
  top: 8.625rem;
  left: 50%;
  width: 10rem;
  height: 12.5rem;
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-2 {
    -webkit-transform: translateX(-50%);
    -ms-transform: translateX(-50%);
    transform: translateX(-50%);
    top: 20.8125rem;
    width: 7.5rem;
    height: 10rem;
  }
}
.about__container .absolute--block.block-3 {
  top: calc(100% - 5.125rem);
  right: 12.48%;
  width: 12.5rem;
  height: 15rem;
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-3 {
    width: 10rem;
    height: 12.5rem;
    right: 0;
    top: auto;
    bottom: 5.125rem;
  }
}
.about__container .absolute--block.block-4 {
  top: -1.6875rem;
  right: 12.48%;
  width: 8.75rem;
  height: 10rem;
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-4 {
    width: 6.25rem;
    height: 7.5rem;
    right: 0;
    top: 6.3125rem;
  }
}
.about__container .absolute--block.block-5 {
  top: calc(100% - 2.625rem);
  left: 16.46%;
  width: 10rem;
  height: 12.5rem;
}
@media (width <= 47.99875rem) {
  .about__container .absolute--block.block-5 {
    width: 7.5rem;
    height: 10rem;
    left: 0;
    top: auto;
    bottom: -8.0625rem;
  }
}

.benefit {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  width: 100%;
}
.benefit__line {
  width: 100%;
  max-width: 105rem;
  margin-inline: auto;
  height: 1px;
  background-color: rgba(12, 65, 62, 0.08);
  margin-top: 12.1875rem;
}
@media (width <= 47.99875rem) {
  .benefit__line {
    margin-top: 5rem;
  }
}
.benefit__title {
  width: 100%;
  max-width: 100rem;
  margin-inline: auto;
}
@media screen and (max-width: calc(100rem + 2.5rem + 2.5rem)) {
  .benefit__title {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .benefit__title {
    width: calc(100% - 1.25rem * 2);
  }
}
.benefit__title {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  margin-top: 6.5625rem;
  gap: 1.5rem;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}
@media (width <= 47.99875rem) {
  .benefit__title {
    margin-top: 5rem;
  }
}
.benefit__title p.tm {
  max-width: 37.5rem;
}
.benefit__title p.tm,
.benefit__title p.note,
.benefit__title h2 {
  text-align: center;
}
.benefit__slider__container {
  width: 100%;
  max-width: 100rem;
  margin-inline: auto;
  margin-top: 2.5rem;
}
@media screen and (max-width: calc(100rem + 2.5rem + 2.5rem)) {
  .benefit__slider__container {
    width: calc(100% - 2.5rem * 2);
  }
}
@media (width <= 63.99875rem) {
  .benefit__slider__container {
    width: calc(100% - 1.25rem * 2);
  }
}
@media (min-width: 768px) {
  .benefit__slider__container .swiper.only-mobile-slider.benefit-slider .swiper-wrapper {
    display: grid !important;
    grid-template-columns: repeat(4, 1fr);
    gap: 0.75rem;
  }
}
@media (min-width: 768px) and (max-width: 72.5rem) {
  .benefit__slider__container .swiper.only-mobile-slider.benefit-slider .swiper-wrapper {
    display: grid !important;
    grid-template-columns: repeat(2, 1fr);
    gap: 0.75rem;
  }
}
@media (width <= 47.99875rem) {
  .benefit__slider__container {
    width: 100%;
    max-width: unset;
  }
}
.benefit__slider__container .benefit-slider .swiper-slide {
  height: auto;
}

.terms-modal {
  position: fixed;
  inset: 0;
  z-index: 10000000100;
  width: 100%;
  height: 100dvh;
  background-color: var(--pastel-green-100);
  overflow: hidden;
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
}
.terms-modal__content {
  height: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.terms-modal .simple-bar-container {
  height: 100%;
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
}
.terms-modal .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 2.5rem;
  width: calc(100% - 1.25rem - 1.25rem);
  max-width: 45rem;
  margin-inline: auto;
  padding: var(--terms-padding-top) 0 var(--terms-padding-bottom);
}
.terms-modal .content .block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 1rem;
}
.terms-modal .content .block h3 {
  font-family: var(--inter);
  font-size: 1.1875rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.5rem;
  letter-spacing: -0.02375rem;
}
.terms-modal .content .block ul {
  list-style: none;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.terms-modal .content .block ul > li {
  position: relative;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.25rem;
}
.terms-modal .content .block ul > li:before {
  content: "•";
}
.terms-modal .content .block ol {
  list-style-type: none;
  counter-reset: custom-counter;
}
.terms-modal .content .block ol > li {
  counter-increment: custom-counter;
  position: relative;
  padding-left: 1.5rem;
}
.terms-modal .content .block ol > li::before {
  content: counter(custom-counter) ".";
  position: absolute;
  left: 0.25rem;
}
.terms-modal .content .block li,
.terms-modal .content .block p {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: var(--green-600);
}
.terms-modal .content .block li b,
.terms-modal .content .block p b {
  font-weight: 600;
  color: var(--green-900);
}
.terms-modal .content .block li a,
.terms-modal .content .block p a {
  font-weight: 600;
  color: var(--green-900);
  text-decoration: underline;
}
@media (hover: hover) {
  .terms-modal .content .block li a:hover,
  .terms-modal .content .block p a:hover {
    cursor: pointer;
    color: var(--green-300);
  }
}
.terms-modal .content .block li a:focus-visible,
.terms-modal .content .block p a:focus-visible {
  color: var(--green-300);
}
.terms-modal .simplebar-track.simplebar-vertical {
  top: var(--terms-padding-top);
  bottom: var(--terms-padding-bottom);
}

.form__modal {
  position: fixed;
  inset: 0;
  z-index: 1000000000;
  width: 100%;
  height: 100dvh;
  background-color: var(--pastel-green-100);
  overflow: hidden;
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
}
.form__modal .simple-bar-container {
  height: 100%;
  -ms-scroll-chaining: none;
  overscroll-behavior: contain;
}
.form__modal .content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 2.5rem;
  width: calc(100% - 1.25rem - 1.25rem);
  max-width: 45rem;
  margin-inline: auto;
  padding: var(--terms-padding-top) 0 var(--terms-padding-bottom);
}
@media (width <= 47.99875rem) {
  .form__modal .content {
    padding: var(--terms-padding-top) 0 1.25rem;
  }
}
.form__modal .simplebar-track.simplebar-vertical {
  top: var(--terms-padding-top);
  bottom: var(--terms-padding-bottom);
}
.form__modal__content {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  min-height: 100px;
  width: 100%;
}
.form__modal__content form {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.5rem 0.75rem;
}
@media (width <= 47.99875rem) {
  .form__modal__content form {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.form__modal__content form .input--block {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  position: relative;
}
.form__modal__content form .input--block.big {
  grid-column: 1/span 2;
}
.form__modal__content form .input--block.error label {
  outline-color: var(--red);
  border-color: var(--red);
}
.form__modal__content form .input--block.error label:has(input:focus, input:hover, input:focus-visible) {
  outline-color: var(--red);
}
.form__modal__content form .input--block.error .error-message {
  opacity: 1;
}
.form__modal__content form .input--block .error-message {
  position: absolute;
  top: calc(100% + 0.25rem);
  left: 0;
  color: var(--red, #FF4B4B);
  font-family: "Reddit Mono";
  font-size: 11px;
  font-style: normal;
  font-weight: 600;
  line-height: 11px;
  /* 100% */
  letter-spacing: 0.66px;
  text-transform: uppercase;
  opacity: 0;
  -webkit-transition: 0.3s ease all;
  transition: 0.3s ease all;
}
.form__modal__content form .input--block label {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  gap: 0.5rem;
  border-radius: 8px;
  border: 1px solid var(--green-90024, rgba(12, 65, 62, 0.24));
  background: var(--green-9008, rgba(12, 65, 62, 0.08));
  -webkit-backdrop-filter: blur(4px);
  backdrop-filter: blur(4px);
  padding: 1rem;
  outline: 1px solid transparent;
  -webkit-transition: 0.2s ease all;
  transition: 0.2s ease all;
}
.form__modal__content form .input--block label .input-name {
  font-family: "Reddit Mono";
  font-size: 0.8125rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1rem;
  letter-spacing: 0.04875rem;
  text-transform: uppercase;
}
.form__modal__content form .input--block label input {
  width: 100%;
  background-color: transparent;
  color: var(--green-900);
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
}
.form__modal__content form .input--block label input::-webkit-input-placeholder {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: rgba(12, 65, 62, 0.24);
}
.form__modal__content form .input--block label input::-moz-placeholder {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: rgba(12, 65, 62, 0.24);
}
.form__modal__content form .input--block label input:-ms-input-placeholder {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: rgba(12, 65, 62, 0.24);
}
.form__modal__content form .input--block label input::-ms-input-placeholder {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: rgba(12, 65, 62, 0.24);
}
.form__modal__content form .input--block label input::placeholder {
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
  color: rgba(12, 65, 62, 0.24);
}
.form__modal__content form .input--block label:has(input:focus, input:hover, input:focus-visible) {
  outline-color: #0C413E;
}
.form__modal__content form .description {
  grid-column: 1/span 2;
  width: 100%;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 2rem;
}
@media (width <= 47.99875rem) {
  .form__modal__content form .description {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;
    gap: 1.5rem;
  }
}
.form__modal__content form .description p {
  font-family: var(--inter);
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 500;
  line-height: 1rem;
  letter-spacing: -0.0175rem;
  color: var(--green-600);
}
.form__modal__content form .description p a, .form__modal__content form .description p .link {
  font-weight: 600;
  color: var(--green-900);
  text-decoration: underline;
}
@media (hover: hover) {
  .form__modal__content form .description p a:hover, .form__modal__content form .description p .link:hover {
    cursor: pointer;
    color: var(--green-300);
  }
}
.form__modal__content form .description p a:focus-visible, .form__modal__content form .description p .link:focus-visible {
  color: var(--green-300);
}
.form__modal__content form .description .submit-btn {
  -ms-flex-negative: 0;
  flex-shrink: 0;
}
@media (width <= 47.99875rem) {
  .form__modal__content form .description .submit-btn {
    width: 100%;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
  }
}
.form__modal .svg {
  position: absolute;
  bottom: 0;
  z-index: -1;
}
.form__modal .svg.left {
  left: 0;
}
.form__modal .svg.right {
  right: 0;
}
@media (width <= 47.99875rem) {
  .form__modal .svg.desktop {
    display: none;
  }
}
.form__modal .svg.mobile {
  display: none;
}
@media (width <= 47.99875rem) {
  .form__modal .svg.mobile {
    display: block;
  }
}

.border-link {
  --color: var(--white);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding: 0.75rem 1.25rem;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.625rem;
  border-radius: 4rem;
  border: 1.5px solid var(--color);
}
.border-link .text__container {
  overflow: hidden;
  height: 1rem;
}
.border-link .text__container .flex__container {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.1rem;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
}
.border-link .text__container .flex__container .text {
  color: var(--color);
  text-align: center;
  /* Body S – Bold */
  font-family: var(--inter);
  font-size: 0.875rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1rem;
  /* 114.286% */
  letter-spacing: -0.0175rem;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  position: relative;
}
@media (width <= 47.99875rem) {
  .border-link {
    padding: 0.75rem 1.25rem;
  }
}
@media (hover: hover) {
  .border-link:hover {
    cursor: pointer;
    --color: var(--yellow-green);
  }
  .border-link:hover .text__container .flex__container {
    -webkit-transform: translateY(calc(-50% - 0.1rem));
    -ms-transform: translateY(calc(-50% - 0.1rem));
    transform: translateY(calc(-50% - 0.1rem));
  }
}
.border-link:focus-visible {
  --color: var(--yellow-green);
}
.border-link:focus-visible .text__container .flex__container {
  -webkit-transform: translateY(calc(-50% - 0.1rem));
  -ms-transform: translateY(calc(-50% - 0.1rem));
  transform: translateY(calc(-50% - 0.1rem));
}

.ui-solid-link {
  background-color: var(--green-900);
  border-radius: 4rem;
  padding: 1.25rem 2rem;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  gap: 0.5rem;
  --gap: 0.12rem;
  color: var(--white);
}
@media (hover: hover) {
  .ui-solid-link:hover {
    cursor: pointer;
    background-color: var(--yellow-green);
    color: var(--green-900);
  }
  .ui-solid-link:hover .text__container .flex__container {
    -webkit-transform: translateY(calc(-50% - 0.1rem));
    -ms-transform: translateY(calc(-50% - 0.1rem));
    transform: translateY(calc(-50% - 0.1rem));
  }
}
.ui-solid-link:focus-visible {
  background-color: var(--yellow-green);
  color: var(--green-900);
}
.ui-solid-link:focus-visible .text__container .flex__container {
  -webkit-transform: translateY(calc(-50% - 0.1rem));
  -ms-transform: translateY(calc(-50% - 0.1rem));
  transform: translateY(calc(-50% - 0.1rem));
}
.ui-solid-link .icon {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 1.25rem;
  height: 1.25rem;
  overflow: hidden;
  color: inherit;
}
.ui-solid-link .icon svg {
  -ms-flex-negative: 0;
  flex-shrink: 0;
  width: 1.25rem;
  height: 1.25rem;
  color: inherit;
}
.ui-solid-link .text__container {
  overflow: hidden;
  height: 1.25em;
  color: inherit;
}
.ui-solid-link .text__container .flex__container {
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  gap: 0.1rem;
  -webkit-transition: 0.4s ease all;
  transition: 0.4s ease all;
  color: inherit;
}
.ui-solid-link .text__container .flex__container .text {
  color: inherit;
  text-align: center;
  /* Body S – Bold */
  font-family: var(--inter);
  font-size: 1rem;
  font-style: normal;
  font-weight: 600;
  line-height: 1.25rem;
  letter-spacing: -0.025rem;
}

.close-modal {
  position: absolute;
  right: 2.5rem;
  top: 2.5rem;
  z-index: 10;
  width: 3.75rem;
  height: 3.75rem;
  border-radius: 100rem;
  border: 1px solid #C5D1D1;
  background: var(--pastel-green-100);
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
}
@media (width <= 47.99875rem) {
  .close-modal {
    right: 1.25rem;
    top: 1.25rem;
  }
}
@media (hover: hover) {
  .close-modal:hover {
    cursor: pointer;
    background-color: var(--yellow-green);
    border-color: transparent;
  }
}
.close-modal:focus-visible {
  background-color: var(--yellow-green);
  border-color: transparent;
}

@media (min-width: 768px) {
  .swiper.only-mobile-slider {
    overflow: visible !important;
  }
  .swiper.only-mobile-slider .swiper-wrapper {
    display: -webkit-box !important;
    display: -ms-flexbox !important;
    display: flex !important;
    width: auto !important;
  }
  .swiper.only-mobile-slider .swiper-slide {
    -webkit-box-flex: 1 !important;
    -ms-flex: 1 !important;
    flex: 1 !important;
    width: auto !important;
    min-width: 0;
  }
}
.swiper.only-mobile-slider .swiper-slide {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  height: auto;
}
@media (width <= 47.99875rem) {
  .swiper.only-mobile-slider .swiper-slide {
    width: calc(100% - 1.25rem - 2.625rem);
  }
}

.swiper .custom-pagination {
  display: none;
}
@media (width <= 47.99875rem) {
  .swiper .custom-pagination {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 0.75rem 1.5rem;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    margin-inline: auto;
    width: -webkit-fit-content;
    width: -moz-fit-content;
    width: fit-content;
    background-color: rgba(12, 65, 62, 0.08);
    margin-top: 2rem;
    border-radius: 100px;
    gap: 0.5rem;
  }
}
.swiper .custom-pagination .swiper-pagination-bullet {
  margin: 0;
  width: 0.5625rem;
  height: 0.5625rem;
  -webkit-box-flex: 0;
  -ms-flex-positive: 0;
  flex-grow: 0;
  opacity: 1;
  background-color: rgba(12, 65, 62, 0.24);
}
.swiper .custom-pagination .swiper-pagination-bullet-active {
  background: var(--green-900);
}

.simplebar-track.simplebar-vertical {
  right: 4px;
  width: 6px;
}
.simplebar-track.simplebar-vertical .simplebar-scrollbar {
  width: 100%;
  opacity: 1;
}
.simplebar-track.simplebar-vertical .simplebar-scrollbar:before {
  inset: 0;
  opacity: 1;
  background-color: rgba(12, 65, 62, 0.24);
}

body {
  background-color: var(--pastel-green-100);
}

body, html {
  -webkit-overflow-scrolling: auto !important;
  scroll-behavior: auto !important;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
